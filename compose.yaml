services:
  db:
    image: postgres:17-alpine
    env_file: .env
    ports:
      - "127.0.0.1:${POSTGRES_PORT_BINDING}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  migrations:
    build: ./backend
    env_file: .env
    command: sh -c "npm run db:migrate"
    depends_on:
      db:
        condition: service_healthy

  backend:
    build: ./backend
    env_file: .env
    ports:
      - "127.0.0.1:${BACKEND_PORT_BINDING}:${BACKEND_PORT}"
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT}/"]
      interval: 5s
      timeout: 5s
      retries: 5
    
  frontend:
    build: ./frontend
    env_file: .env
    ports:
      - "127.0.0.1:${FRONTEND_PORT_BINDING}:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: always

volumes:
  db_data:
  